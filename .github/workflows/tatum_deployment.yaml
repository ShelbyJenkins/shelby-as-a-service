name: deploy-tatum

on: workflow_dispatch

jobs:
  docker:
    runs-on: ubuntu-latest
    env:

        ### Secrets ###
        TATUM_DOCKER_TOKEN:  ${{ secrets.TATUM_DOCKER_TOKEN }}
        TATUM_STACKPATH_CLIENT_ID:  ${{ secrets.TATUM_STACKPATH_CLIENT_ID }}
        TATUM_STACKPATH_API_CLIENT_SECRET:  ${{ secrets.TATUM_STACKPATH_API_CLIENT_SECRET }}
        TATUM_OPENAI_API_KEY:  ${{ secrets.TATUM_OPENAI_API_KEY }}
        TATUM_PINECONE_API_KEY:  ${{ secrets.TATUM_PINECONE_API_KEY }}
        TATUM_DISCORD_BOT_TOKEN:  ${{ secrets.TATUM_DISCORD_BOT_TOKEN }}
        TATUM_SLACK_BOT_TOKEN:  ${{ secrets.TATUM_SLACK_BOT_TOKEN }}
        TATUM_SLACK_APP_TOKEN:  ${{ secrets.TATUM_SLACK_APP_TOKEN }}
        # Secrets in the format of 'secrets.NAME' with the 'NAME' portion added to your forked repos secrets. #

        DEPLOYMENT_VARS: '{"SECRETS_TO_DEPLOY": ["TATUM_DOCKER_TOKEN", "TATUM_STACKPATH_CLIENT_ID", "TATUM_STACKPATH_API_CLIENT_SECRET", "TATUM_OPENAI_API_KEY", "TATUM_PINECONE_API_KEY", "TATUM_DISCORD_BOT_TOKEN", "TATUM_SLACK_BOT_TOKEN", "TATUM_SLACK_APP_TOKEN"], "DEPLOYMENT_NAME": "tatum", "DOCKER_REGISTRY": "docker.io", "DOCKER_USERNAME": "shelbyjenkins", "DOCKER_REPO": "shelby-as-a-service", "STACKPATH_STACK_ID": "shelby-stack-327b67", "DOCKER_IMAGE_PATH": "shelbyjenkins/shelby-as-a-service:tatum-latest", "DOCKER_SERVER": "docker.io/shelbyjenkins/shelby-as-a-service", "WORKLOAD_NAME": "tatum-workload", "WORKLOAD_SLUG": "tatum-slug", "TATUM_ENABLED_MONIKER_NAMES": ["tatum"], "TATUM_INDEX_ENV": "us-central1-gcp", "TATUM_INDEX_NAME": "shelby-as-a-service", "TATUM_DISCORDCONFIG_DISCORD_MANUAL_REQUESTS_ENABLED": true, "TATUM_DISCORDCONFIG_DISCORD_AUTO_RESPONSE_ENABLED": false, "TATUM_DISCORDCONFIG_DISCORD_AUTO_RESPONSE_COOLDOWN": 10, "TATUM_DISCORDCONFIG_DISCORD_AUTO_RESPOND_IN_THREADS": false, "TATUM_DISCORDCONFIG_DISCORD_ALL_CHANNELS_ENABLED": false, "TATUM_DISCORDCONFIG_DISCORD_SPECIFIC_CHANNELS_ENABLED": true, "TATUM_DISCORDCONFIG_DISCORD_USER_DAILY_TOKEN_LIMIT": 30000, "TATUM_DISCORDCONFIG_DISCORD_WELCOME_MESSAGE": "ima tell you about the {}.", "TATUM_DISCORDCONFIG_DISCORD_SHORT_MESSAGE": "<@{}>, brevity is the soul of wit, but not of good queries. Please provide more details in your request.", "TATUM_DISCORDCONFIG_DISCORD_MESSAGE_START": "Running request... relax, chill, and vibe a minute.", "TATUM_DISCORDCONFIG_DISCORD_MESSAGE_END": "Generated by: gpt-4. Memory not enabled. Has no knowledge of past or current queries. For code see https://github.com/ShelbyJenkins/shelby-as-a-service.", "TATUM_DISCORDCONFIG_DEPLOYMENT_REQUIRED_VARIABLES_": ["discord_bot_token"], "TATUM_DISCORDCONFIG_MONIKER_REQUIRED_VARIABLES_": ["discord_enabled_servers", "discord_specific_channel_ids", "discord_all_channels_excluded_channels"], "TATUM_DISCORDCONFIG_SPRITE_REQS_": ["ShelbyConfig"], "TATUM_SHELBYCONFIG_ACTION_LLM_MODEL": "gpt-4", "TATUM_SHELBYCONFIG_CEQ_DATA_DOMAIN_CONSTRAINTS_ENABLED": false, "TATUM_SHELBYCONFIG_CEQ_DATA_DOMAIN_CONSTRAINTS_LLM_MODEL": "gpt-4", "TATUM_SHELBYCONFIG_CEQ_DATA_DOMAIN_NONE_FOUND_MESSAGE": "Query not related to any supported data domains (aka topics). Supported data domains are:", "TATUM_SHELBYCONFIG_CEQ_KEYWORD_GENERATOR_ENABLED": false, "TATUM_SHELBYCONFIG_CEQ_KEYWORD_GENERATOR_LLM_MODEL": "gpt-4", "TATUM_SHELBYCONFIG_CEQ_DOC_RELEVANCY_CHECK_ENABLED": false, "TATUM_SHELBYCONFIG_CEQ_DOC_RELEVANCY_CHECK_LLM_MODEL": "gpt-4", "TATUM_SHELBYCONFIG_CEQ_EMBEDDING_MODEL": "text-embedding-ada-002", "TATUM_SHELBYCONFIG_CEQ_TIKTOKEN_ENCODING_MODEL": "text-embedding-ada-002", "TATUM_SHELBYCONFIG_CEQ_DOCS_TO_RETRIEVE": 5, "TATUM_SHELBYCONFIG_CEQ_DOCS_MAX_TOKEN_LENGTH": 1200, "TATUM_SHELBYCONFIG_CEQ_DOCS_MAX_TOTAL_TOKENS": 3500, "TATUM_SHELBYCONFIG_CEQ_DOCS_MAX_USED": 5, "TATUM_SHELBYCONFIG_CEQ_MAIN_PROMPT_LLM_MODEL": "gpt-4", "TATUM_SHELBYCONFIG_CEQ_MAX_RESPONSE_TOKENS": 300, "TATUM_SHELBYCONFIG_OPENAI_TIMEOUT_SECONDS": 180.0, "TATUM_SHELBYCONFIG_API_AGENT_SELECT_OPERATIONID_LLM_MODEL": "gpt-4", "TATUM_SHELBYCONFIG_API_AGENT_CREATE_FUNCTION_LLM_MODEL": "gpt-4", "TATUM_SHELBYCONFIG_API_AGENT_POPULATE_FUNCTION_LLM_MODEL": "gpt-4", "TATUM_SHELBYCONFIG_DEPLOYMENT_REQUIRED_VARIABLES_": ["index_env", "index_name", "openai_api_key", "pinecone_api_key"], "TATUM_SHELBYCONFIG_MONIKER_REQUIRED_VARIABLES_": [], "TATUM_TATUM_MONIKER_ENABLED": true, "TATUM_TATUM_MONIKER_ENABLED_SPRITE_NAMES": ["discord"], "TATUM_TATUM_MONIKER_ENABLED_DATA_DOMAINS": ["tatum"], "TATUM_TATUM_DISCORDCONFIG_DISCORD_ENABLED_SERVERS": [847940290903932939], "TATUM_TATUM_DISCORDCONFIG_DISCORD_SPECIFIC_CHANNEL_IDS": [1125934881206173766], "TATUM_TATUM_DISCORDCONFIG_DISCORD_ALL_CHANNELS_EXCLUDED_CHANNELS": null, "TATUM_TATUM_DISCORDCONFIG_CEQ_MAX_RESPONSE_TOKENS": 250}'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10.11'

      - name: Cache pip dependencies
        uses: actions/cache@v2
        id: cache
        with:
          path: ~/.cache/pip 
          key: ${{  runner.os }}-pip-${{  hashFiles('**deployments/tatum/requirements.txt') }}
          restore-keys: |
            ${{  runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f deployments/tatum/requirements.txt ]; then pip install -r deployments/tatum/requirements.txt; fi

      - name: Login to Docker registry
        uses: docker/login-action@v2 
        with:
          registry: docker.io
          username: shelbyjenkins
          password: ${{  secrets.TATUM_DOCKER_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: deployments/tatum/Dockerfile
          push: true
          tags: shelbyjenkins/shelby-as-a-service:tatum-latest

      - name: Add execute permissions to the script
        run: chmod +x app/deployment_maker/deploy_stackpath_container.py

      - name: Run deployment script
        run: app/deployment_maker/deploy_stackpath_container.py
