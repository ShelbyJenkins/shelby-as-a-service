name: Tatum - Slack - Build and Push Docker Image

on: workflow_dispatch

jobs:
  docker:
    runs-on: ubuntu-latest
    env:
        STACKPATH_CLIENT_ID: ${{ secrets.STACKPATH_CLIENT_ID }}
        STACKPATH_API_CLIENT_SECRET: ${{ secrets.STACKPATH_API_CLIENT_SECRET }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        PINECONE_API_KEY: ${{ secrets.PINECONE_API_KEY }}
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}

        SLACK_BOT_TOKEN: ${{ secrets.TATUM_SPRITE_SLACK_BOT_TOKEN }}
        SLACK_APP_TOKEN: ${{ secrets.TATUM_SPRITE_SLACK_APP_TOKEN }}

        WORKLOAD_NAME: tatum-slack-sprite
        WORKLOAD_SLUG: slack-sprite
        PINECONE_INDEX: shelby-as-a-service
        NAMESPACES: '{"tatum": "blockchain and web3"}'

        MAX_RESPONSE_TOKENS: 2000

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10.11'

    - name: Cache pip dependencies
      uses: actions/cache@v2
      id: cache
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Login to Docker registry
      uses: docker/login-action@v2 
      with:
        registry: docker.io 
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: app/slack/Dockerfile
        push: true
        tags: shelbyjenkins/shelby-as-a-service:slack-latest

    - name: Add execute permissions to the script
      run: chmod +x app/slack/stackpath_container_slack.py

    - name: Run deployment script
      run: app/slack/stackpath_container_slack.py