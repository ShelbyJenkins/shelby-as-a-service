{"metadata": {"tag": "Blockchain operations", "tag_number": 0, "doc_number": 109, "operation_id": "registererc20token", "doc_url": "https://apidoc.tatum.io/tag/Blockchain operations#operation/registererc20token", "server_url": "https://api.tatum.io/v3/offchain/token/{chain}"}, "content": "path /v3/offchain/token/chain\noperationId registerErc20Token\nparameters\ndescription Blockchain to work with\nin path\nname chain\nrequired True\nschema\ntype string\nsummary Register a new ERC20 or ERC20equivalent token in the virtual account\ndescription 2 credits per API call\nThis is the first step to create a new ERC20 or ERC20 equivalent token with some supply in a virtual account\n\n\nThis method only creates Tatum Private ledger virtual currency with predefined parameters It will not generate any blockchain smart contract\nThe whole supply of token is stored in the customers newly created account Then it is possible to create new Tatum accounts with token name as accounts currency\nNewly created account is frozen until the specific smart contract address is linked with the Tatum virtual currency representing the token\nOrder of the steps to create smart contract with Tatum private ledger support\n\nRegister token this API  creates a virtual currency within Tatum\nDeploy smart contract  create new smart contract on the blockchain\nStore smart contract address  link newly created smart contract address with Tatum virtual currency  this operation enables frozen account and enables ledger synchronization for Tatum accounts\n\nBlockchain address will be assigned to the virtual account as a deposit address It can be defined via the address explicitly or by using xpub and derivationIndex\nrequestBody\noneOf\nErc20\nproperties\nsymbol\ndescription The name of the token used as an identifier within the Tatum platform and as a currency symbol on the blockchainThe token name that you specify here must be the same as the token name in the symbol parameter of the smart contract that you are going to deploy or have already deployed for this token\nmaxLength 30\nminLength 1\npattern azAZ09\ntype string\nsupply\ndescription The supply of the token\nmaxLength 38\npattern ddd\ntype string\ndecimals\ndescription The number of decimal places that the token has\nminimum 0\ntype number\ndescription\ndescription The description of the token used as a description within the Tatum platform and as a currency name on the blockchain\nmaxLength 100\nminLength 1\ntype string\nxpub\ndescription The extended public key of the wallet from which a deposit address for the virtual account will be generatedNOTE On Solana you only can assign an existing address to the virtual account use the Erc20Address schema of this API\nmaxLength 150\nminLength 1\ntype string\nderivationIndex\ndescription The derivation index to use together with the extended public key to generate the deposit address\nformat int32\ntype integer\nmaximum 2147483647\nbasePair\ndescription The base pair for the virtual currency that represents the token used to calculate the value of a transaction\nFiatOrCryptoCurrency\ntype string\nbaseRate\ntype number\ndefault 1\nminimum 0\ndescription The exchange rate for the base pair one unit of the created virtual currency equals 1 unit of basePairbaseRate\ncustomer\nCustomerRegistration\nproperties\nexternalId\ndescription The external ID of the customer use only anonymized identification that you have in your systemIf a customer with the specified external ID does not exist a new customer is created If a customer with the specified external ID exists it is updated with the provided information\nmaxLength 100\nminLength 1\ntype string\naccountingCurrency\ndescription The ISO 4217 code of the currency in which all transactions for all virtual accounts of the customer will be billed to overwrite the currency for this specific virtual account set the accountingCurrency parameter at the account level\ndefault EUR\nFiatCurrency\ntype string\ncustomerCountry\ndescription The ISO 31661 code of the country that the customer has to be compliant with\nmaxLength 2\nminLength 2\ntype string\nproviderCountry\ndescription The ISO 31661 code of the country that the service provider has to be compliant with\nmaxLength 2\nminLength 2\ntype string\nrequired\nexternalId\ntype object\ndescription If a customer with the specified external ID does not exist a new customer is created If a customer with the specified external ID exists it is updated with the provided information\naccountingCurrency\ndescription The ISO 4217 code of the currency in which all transactions for the created virtual account will be billed\ndefault USD\nFiatCurrency\ntype string\nrequired\nsymbol\nsupply\ndecimals\ndescription\nbasePair\nderivationIndex\nxpub\ntype object\nErc20Address\nproperties\nsymbol\ndescription The name of the token used as an identifier within the Tatum platform and as a currency symbol on the blockchainThe token name that you specify here must be the same as the token name in the symbol parameter of the smart contract that you are going to deploy or have already deployed for this token\nmaxLength 30\nminLength 1\npattern azAZ09\ntype string\nsupply\ndescription The supply of the token\nmaxLength 38\npattern ddd\ntype string\ndecimals\ndescription The number of decimal places that the token has\nminimum 0\ntype number\ndescription\ndescription The description of the token used as a description within the Tatum platform and as a currency name on the blockchain\nmaxLength 100\nminLength 1\ntype string\naddress\ndescription The blockchain address to be assigned to the virtual account as a deposit address\nmaxLength 44\nminLength 42\ntype string\nbasePair\ndescription The base pair for the virtual currency that represents the token used to calculate the value of a transaction\nFiatOrCryptoCurrency\ntype string\nbaseRate\ntype number\ndefault 1\nminimum 0\ndescription The exchange rate for the base pair one unit of the created virtual currency equals 1 unit of basePairbaseRate\ncustomer\nCustomerRegistration\nproperties\nexternalId\ndescription The external ID of the customer use only anonymized identification that you have in your systemIf a customer with the specified external ID does not exist a new customer is created If a customer with the specified external ID exists it is updated with the provided information\nmaxLength 100\nminLength 1\ntype string\naccountingCurrency\ndescription The ISO 4217 code of the currency in which all transactions for all virtual accounts of the customer will be billed to overwrite the currency for this specific virtual account set the accountingCurrency parameter at the account level\ndefault EUR\nFiatCurrency\ntype string\ncustomerCountry\ndescription The ISO 31661 code of the country that the customer has to be compliant with\nmaxLength 2\nminLength 2\ntype string\nproviderCountry\ndescription The ISO 31661 code of the country that the service provider has to be compliant with\nmaxLength 2\nminLength 2\ntype string\nrequired\nexternalId\ntype object\ndescription If a customer with the specified external ID does not exist a new customer is created If a customer with the specified external ID exists it is updated with the provided information\naccountingCurrency\ndescription AThe ISO 4217 code of the currency in which all transactions for the created virtual account will be billed\ndefault USD\nFiatCurrency\ntype string\nrequired\nsymbol\nsupply\ndecimals\ndescription\nbasePair\naddress\ntype object\nrequired True\nresponses\n200\nErc20Response\nproperties\naccountId\ndescription The ID of the created virtual account with the currency set to the token name the symbol parameter of the request bodyThe token supply will be created as soon as the token smart contract is deployed on the blockchain\ntype string\naddress\ndescription The deposit address of the virtual account\ntype string\ntype object\ndescription OK"}