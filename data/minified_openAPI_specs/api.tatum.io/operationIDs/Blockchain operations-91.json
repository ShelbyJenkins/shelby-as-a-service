{"metadata": {"tag": "Blockchain operations", "tag_number": 0, "doc_number": 91, "operation_id": "btctransfer", "doc_url": "https://apidoc.tatum.io/tag/Blockchain operations#operation/btctransfer", "server_url": "https://api.tatum.io/v3/offchain/bitcoin/transfer"}, "content": "path /v3/offchain/bitcoin/transfer\noperationId BtcTransfer\nsummary Send BTC from a virtual account to the blockchain\ndescription 2 credits per API call\nSend BTC Bitcoin from a virtual account to the blockchain This will create Tatum internal withdrawal request with ID If every system works as expected withdrawal request is marked as complete and transaction id is assigned to it\n\nIf Bitcoin server connection is unavailable withdrawal request is cancelled\nIf blockchain transfer is successful but is it not possible to reach Tatum transaction id of blockchain transaction is returned and withdrawal request must be completed manually otherwise all other withdrawals will be pending\n\nThere are two possibilites how the transaction on the blockchain can be created\n\nUsing mnemonic  all of the addresses that are generated from the mnemonic are scanned for the incoming deposits\nwhich are used as a source of the transaction Assets which are not used in a transaction are moved to the system address wih the derivation index 0 Address with index 0 cannot be assigned automatically to any account and is used for custodial wallet use cases For noncustodial wallets field attr should be present and it should be address with the index 1 of the connected wallet\nUsing keyPair  addresses which are used as a source of the transaction are entered manually\n\nIt is possible to perform ledger to blockchain transaction for ledger accounts without blockchain address assigned to them\nThis method is a helper method which internally wraps these steps\n\nStore withdrawal  create a ledger transaction which debits the assets on the sender account\nPerform blockchain transaction\nComplete withdrawal  move the withdrawal to the completed state when all of the previous steps were successful\n\nWhen some of the steps fails Cancel withdrawal operation is used which cancels withdrawal and creates refund transaction to the sender account\nThis operation needs the private key of the blockchain address Every time the funds are transferred the transaction must be signed with the corresponding private key\nNo one should ever send its own private keys to the internet because there is a strong possibility of stealing keys and losing funds In this method it is possible to enter privateKey\nor signatureId PrivateKey should be used only for quick development on testnet versions of blockchain when there is no risk of losing funds In production\nTatum KMS should be used for the highest security standards and signatureId should be present in the request\nAlternatively using the Tatum client library for supported languages\nrequestBody\noneOf\nTransferBtcMnemonic\nproperties\nsenderAccountId\ndescription Sender account ID\nmaxLength 24\nminLength 24\ntype string\naddress\ndescription Blockchain address to send assets to For BTC LTC DOGE and BCH it is possible to enter list of multiple recipient blockchain addresses as a comma separated string\nmaxLength 10000\nminLength 1\ntype string\namount\ndescription Amount to be withdrawn to blockchain\nmaxLength 38\ntype string\npattern ddd\ncompliant\ndescription Compliance check if withdrawal is not compliant it will not be processed\ntype boolean\nfee\ndescription Fee to be submitted as a transaction fee to blockchain If none is set default value of 00005 BTC is used Minimum fee is 000001 BTC\ntype string\npattern ddd\nmultipleAmounts\ndescription For BTC LTC DOGE and BCH it is possible to enter list of multiple recipient blockchain amounts List of recipient addresses must be present in the address field and total sum of amounts must be equal to the amount field\ntype array\nitems\ntype string\npattern ddd\nmnemonic\nmaxLength 500\nminLength 1\ndescription Mnemonic seed  usually 1224 words with access to whole wallet\nEither mnemonic keyPair or signature Id must be present  depends on the type of account and xpub\nTatum KMS does not support keyPair type of offchain transaction only mnemonic based\ntype string\nxpub\ndescription Extended public key xpub of the wallet associated with the accounts and used mnemonic Should be present when mnemonic is used\nmaxLength 150\nminLength 1\ntype string\npaymentId\ndescription Identifier of the payment shown for created Transaction within Tatum sender account\nmaxLength 100\nminLength 1\ntype string\nsenderNote\ndescription Note visible to owner of withdrawing account\nmaxLength 500\nminLength 1\ntype string\nrequired\namount\nsenderAccountId\naddress\nmnemonic\nxpub\ntype object\nTransferBtcKeyPair\nproperties\nsenderAccountId\ndescription Sender account ID\nmaxLength 24\nminLength 24\ntype string\naddress\ndescription Blockchain address to send assets to For BTC LTC DOGE and BCH it is possible to enter list of multiple recipient blockchain addresses as a comma separated string\nmaxLength 10000\nminLength 1\ntype string\namount\ndescription Amount to be withdrawn to blockchain\nmaxLength 38\ntype string\npattern ddd\ncompliant\ndescription Compliance check if withdrawal is not compliant it will not be processed\ntype boolean\nfee\ndescription Fee to be submitted as a transaction fee to blockchain If none is set default value of 00005 BTC is used Minimum fee is 000001 BTC\ntype string\npattern ddd\nmultipleAmounts\ndescription For BTC LTC DOGE and BCH it is possible to enter list of multiple recipient blockchain amounts List of recipient addresses must be present in the address field and total sum of amounts must be equal to the amount field\ntype array\nitems\ntype string\npattern ddd\nkeyPair\ndescription Array of assigned blockchain addresses with their private keys\nEither mnemonic keyPair or signature Id must be present  depends on the type of account and xpub\nTatum KMS does not support keyPair type of offchain transaction only mnemonic based\ntype array\nitems\ntype object\nproperties\naddress\ntype string\ndescription Blockchain address assigned to account withdrawal is made from\nmaxLength 50\nminLength 30\nprivateKey\ntype string\ndescription Private key of blockchain address\nmaxLength 52\nminLength 52\nattr\ndescription Used to parametrize withdrawal as a change address for left coins from transaction\nmaxLength 256\nminLength 1\ntype string\npaymentId\ndescription Identifier of the payment shown for created Transaction within Tatum sender account\nmaxLength 100\nminLength 1\ntype string\nsenderNote\ndescription Note visible to owner of withdrawing account\nmaxLength 500\nminLength 1\ntype string\nrequired\namount\nsenderAccountId\naddress\nkeyPair\nattr\ntype object\nTransferBtcKMS\nproperties\nsenderAccountId\ndescription Sender account ID\nmaxLength 24\nminLength 24\ntype string\naddress\ndescription Blockchain address to send assets to For BTC LTC DOGE and BCH it is possible to enter list of multiple recipient blockchain addresses as a comma separated string\nmaxLength 10000\nminLength 1\ntype string\namount\ndescription Amount to be withdrawn to blockchain\nmaxLength 38\ntype string\npattern ddd\ncompliant\ndescription Compliance check if withdrawal is not compliant it will not be processed\ntype boolean\nfee\ndescription Fee to be submitted as a transaction fee to blockchain If none is set default value of 00005 BTC is used Minimum fee is 000001 BTC\ntype string\npattern ddd\nmultipleAmounts\ndescription For BTC LTC DOGE and BCH it is possible to enter list of multiple recipient blockchain amounts List of recipient addresses must be present in the address field and total sum of amounts must be equal to the amount field\ntype array\nitems\ntype string\npattern ddd\nsignatureId\ntype string\nformat uuid\ndescription Signature hash of the mnemonic which will be used to sign transactions locally\nAll signature Ids should be present which might be used to sign transaction\nTatum KMS does not support keyPair type of offchain transaction only mnemonic based\nxpub\ndescription Extended public key xpub of the wallet associated with the accounts Should be present when mnemonic is used\nmaxLength 150\nminLength 1\ntype string\npaymentId\ndescription Identifier of the payment shown for created Transaction within Tatum sender account\nmaxLength 100\nminLength 1\ntype string\nsenderNote\ndescription Note visible to owner of withdrawing account\nmaxLength 500\nminLength 1\ntype string\nrequired\namount\nsenderAccountId\naddress\nsignatureId\nxpub\ntype object\nrequired True\nresponses\n200\noneOf\nOffchainTransactionResult\ntype object\nproperties\nid\ndescription ID of withdrawal If transaction is not valid in blockchain use this id to cancel withdrawal\ntype string\ntxId\ndescription TX hash of successful transaction\ntype string\ncompleted\ndescription If set to true the withdrawal has been completed in the virtual account if set to false the withdrawal has not been completed and you have to complete it manually\ntype boolean\nrequired\ntxId\nid\ncompleted\nOffchainTransactionSignatureResult\ntype object\nproperties\nsignatureId\ndescription ID of prepared payment template to sign This is should be stored on a client side to retrieve ID of the blockchain transaction when signing application signs the transaction and broadcasts it to the blockchain\nformat uuid\ntype string\nrequired\nid\nsignatureId\ndescription OK"}