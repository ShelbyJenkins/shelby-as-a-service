{"metadata": {"tag": "Ethereum", "tag_number": 0, "doc_number": 211, "operation_id": "ethblockchainsmartcontractinvocation", "doc_url": "https://apidoc.tatum.io/tag/Ethereum#operation/ethblockchainsmartcontractinvocation", "server_url": "https://api.tatum.io/v3/ethereum/smartcontract"}, "content": "path /v3/ethereum/smartcontract\noperationId EthBlockchainSmartContractInvocation\nparameters\ndescription Type of Ethereum testnet Defaults to ethereumsepolia\nin header\nname xtestnettype\nrequired False\nschema\ndefault ethereumsepolia\ntype string\nsummary Invoke a method in a smart contract on Ethereum\ndescription 2 credits per API call\nInvoke a method in an existing smart contract on Ethereum\nYou can call a readonly or write method\n\nFor readonly methods the output of the invoked method is returned\nFor write methods the ID of the associated transaction is returned\n\nTroubleshooting a failed transaction\nTatum ensures that this API works against the blockchain accesses the blockchain finds the specified smart contract and executes the specified ABI method with the provided parametersHowever because this API can be run against any smart contract on the blockchain Tatum cannot in any way guarantee that the method itself will be executed successfully\nIf you have issues with invoking the method refer to the user documentation for this method or contact the author of the smart contract\nFor more information about invoking methods in smart contracts see this article on our Support Portal\nSigning a transaction\nWhen invoking a method in a smart contract you are charged a fee for the transaction and you must sign the transaction with the private key of the blockchain address from which the fee will be deducted\nIf caller field is present instead of the private key Tatum will sign the transaction with the managed private key connected to the caller address This is applicable only for paid mainnet plans and all testnet plans Keep in mind that the caller address must have enough access right to perform the action in the smart contract method\nProviding the private key in the API is not a secure way of signing transactions because the private key can be stolen or exposed Your private keys should never leave your security perimeter You should use the private keys only for testing a solution you are building on the testnet of a blockchain\nFor signing transactions on the mainnet we strongly recommend that you use the Tatum Key Management System KMS and provide the signature ID instead of the private key in the API Alternatively you can use the Tatum JavaScript client\nrequestBody\noneOf\nCallSmartContractMethod\ntype object\nproperties\ncontractAddress\nmaxLength 42\nminLength 42\ndescription The address of the smart contract\ntype string\nmethodName\nminLength 1\nmaxLength 500\ndescription Name of the method to invoke on smart contract\ntype string\nmethodABI\ntype object\ndescription ABI of the method to invoke\nparams\ntype array\nitems\ntype object\ndescription Parameters of the method to be invoked\namount\ndescription Amount of the assets to be sent\npattern ddd\ntype string\nfromPrivateKey\ntype string\nmaxLength 66\nminLength 66\ndescription Private key of sender address Private key or signature Id must be present\nnonce\ntype number\nminimum 0\ndescription The nonce to be set to the transaction if not present the last known nonce will be used\nfee\nCustomFee\ndescription The custom defined fee if not present will be calculated automatically\ntype object\nrequired\ngasLimit\ngasPrice\nproperties\ngasPrice\ntype string\ndescription The price for one gas unit in Gwei\npattern d\ngasLimit\ntype string\ndescription The maximum number of gas units that you are willing to spend on processing the transaction at the provided gas price\npattern d\nrequired\ncontractAddress\nparams\nmethodABI\nfromPrivateKey\nmethodName\nCallReadSmartContractMethod\ntype object\nproperties\ncontractAddress\nmaxLength 42\nminLength 42\ndescription The address of the smart contract\ntype string\nmethodName\nminLength 1\nmaxLength 500\ndescription Name of the method to invoke on smart contract\ntype string\nmethodABI\ntype object\ndescription ABI of the method to invoke\nparams\ntype array\nitems\ntype object\ndescription Parameters of the method to be invoked\nrequired\ncontractAddress\nparams\nmethodABI\nmethodName\nCallEthSmartContractMethodCaller\ntype object\nproperties\ncaller\nmaxLength 42\nminLength 42\ndescription The address of the account which will be sender and fee payer of this transaction\ntype string\ncontractAddress\nmaxLength 42\nminLength 42\ndescription The address of the smart contract\ntype string\namount\ndescription Amount of the assets to be sent\npattern ddd\ntype string\nmethodName\nminLength 1\nmaxLength 500\ndescription Name of the method to invoke on smart contract\ntype string\nmethodABI\ntype object\ndescription ABI of the method to invoke\nparams\ntype array\nitems\ntype string\ndescription Parameters of the method to be invoked\nfee\nCustomFee\ndescription The custom defined fee if not present will be calculated automatically\ntype object\nrequired\ngasLimit\ngasPrice\nproperties\ngasPrice\ntype string\ndescription The price for one gas unit in Gwei\npattern d\ngasLimit\ntype string\ndescription The maximum number of gas units that you are willing to spend on processing the transaction at the provided gas price\npattern d\nrequired\ncontractAddress\nparams\nmethodABI\nfromPrivateKey\nmethodName\ncaller\nCallSmartContractMethodKMS\ntype object\nproperties\ncontractAddress\nmaxLength 42\nminLength 42\ndescription The address of the smart contract\ntype string\namount\ndescription Amount of the assets to be sent\npattern ddd\ntype string\nmethodName\nminLength 1\nmaxLength 500\ndescription Name of the method to invoke on smart contract\ntype string\nmethodABI\ntype object\ndescription ABI of the method to invoke\nparams\ntype array\nitems\ntype object\ndescription Parameters of the method to be invoked\nsignatureId\ntype string\nformat uuid\ndescription Identifier of the private key associated in signing application Private key or signature Id must be present\nindex\ntype number\nminimum 0\ndescription If signatureId is mnemonicbased this is the index to the specific address from that mnemonic\nnonce\ntype number\nminimum 0\ndescription The nonce to be set to the transaction if not present the last known nonce will be used\nfee\nCustomFee\ndescription The custom defined fee if not present will be calculated automatically\ntype object\nrequired\ngasLimit\ngasPrice\nproperties\ngasPrice\ntype string\ndescription The price for one gas unit in Gwei\npattern d\ngasLimit\ntype string\ndescription The maximum number of gas units that you are willing to spend on processing the transaction at the provided gas price\npattern d\nrequired\ncontractAddress\nparams\nmethodABI\nsignatureId\nmethodName\nrequired True\nresponses\n200\noneOf\nTransactionHash\ntype object\nproperties\ntxId\ndescription The hash ID of the transaction\ntype string\nrequired\ntxId\nSignatureId\ntype object\nproperties\nsignatureId\nformat uuid\ndescription The internal Tatum ID of the prepared transaction for Key Management Sysytem KMS to signThis is different from the signatureId parameter that you provided in the request body The signatureId parameter in the request body specifies the signature ID associated with the private key in KMS\ntype string\nrequired\nsignatureId\nData\ntype object\nproperties\ndata\ndescription Result of the method if the method was read only\noneOf\ntype object\ntype string\ntype number\ntype array\ntype boolean\nrequired\ndata\ndescription OK"}