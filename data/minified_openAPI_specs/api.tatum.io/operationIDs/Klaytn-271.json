{"metadata": {"tag": "Klaytn", "tag_number": 0, "doc_number": 271, "operation_id": "klaytnblockchainsmartcontractinvocation", "doc_url": "https://apidoc.tatum.io/tag/Klaytn#operation/klaytnblockchainsmartcontractinvocation", "server_url": "https://api.tatum.io/v3/klaytn/smartcontract"}, "context": "path /v3/klaytn/smartcontract\nopid klaytnblockchainsmartcontractinvocation\nsum invoke a method in a smart contract on klaytn\ndesc 2 credits per api call\ninvoke a method in an existing smart contract on klaytn\nyou can call a readonly or write method\n\nfor readonly methods the output of the invoked method is returned\nfor write methods the id of the associated transaction is returned\n        \ntroubleshooting a failed transaction\ntatum ensures that this api works against the blockchain accesses the blockchain finds the specified smart contract and executes the specified abi method with the provided parametershowever because this api can be run against any smart contract on the blockchain tatum cannot in any way guarantee that the method itself will be executed successfully\nif you have issues with invoking the method refer to the user documentation for this method or contact the author of the smart contract\nfor more information about invoking methods in smart contracts see this article on our support portal\nsigning a transaction\nwhen invoking a method in a smart contract you are charged a fee for the transaction and you must sign the transaction with the private key of the blockchain address from which the fee will be deducted\nproviding the private key in the api is not a secure way of signing transactions because the private key can be stolen or exposed your private keys should never leave your security perimeter you should use the private keys only for testing a solution you are building on the testnet of a blockchain\nfor signing transactions on the mainnet we strongly recommend that you use the tatum key management system kms and provide the signature id instead of the private key in the api alternatively you can use the tatum javascript client\nreqBody\noneof\ncallklaytnsmartcontractreadmethod\ntype obj\nprops\ncontractaddress\nmaxlength 42\nminlength 42\ntype str\nmethodname\nminlength 1\nmaxlength 500\ntype str\nmethodabi\ntype obj\nparams\ntype arr\nitems\ntype str\nrequired\ncontractaddress\nparams\nmethodabi\nmethodname\ncallklaytnsmartcontractmethod\ntype obj\nprops\ncontractaddress\nmaxlength 42\nminlength 42\ntype str\namount\npattern ddd\ntype str\nmethodname\nminlength 1\nmaxlength 500\ntype str\nmethodabi\ntype obj\nparams\ntype arr\nitems\ntype str\nfromprivatekey\ntype str\nmaxlength 66\nminlength 66\nnonce\ntype num\nminimum 0\nfee\ntype obj\nrequired\ngaslimit\ngasprice\nprops\ngaslimit\ntype str\npattern d\ngasprice\ntype str\npattern d\nrequired\ncontractaddress\nparams\nmethodabi\nfromprivatekey\nmethodname\ncallklaytnsmartcontractmethodkms\ntype obj\nprops\ncontractaddress\nmaxlength 42\nminlength 42\ntype str\nmethodname\nminlength 1\nmaxlength 500\ntype str\nmethodabi\ntype obj\nparams\ntype arr\nitems\ntype str\nindex\ntype num\nminimum 0\nsignatureid\ntype str\nformat uuid\nnonce\ntype num\nminimum 0\nfee\ntype obj\nrequired\ngaslimit\ngasprice\nprops\ngaslimit\ntype str\npattern d\ngasprice\ntype str\npattern d\nrequired\ncontractaddress\nparams\nmethodabi\nsignatureid\nmethodname\nrequired True\nresponses\n200\noneof\ntransactionhash\ntype obj\nprops\ntxid\ntype str\nrequired\ntxid\nsignatureid\ntype obj\nprops\nsignatureid\nformat uuid\ntype str\nrequired\nsignatureid\ndata\ntype obj\nprops\ndata\noneof\ntype obj\ntype str\ntype num\ntype arr\ntype bool\nrequired\ndata"}