{"metadata": {"tag": "NFT (ERC-721 or compatible)", "tag_number": 0, "doc_number": 329, "operation_id": "nftverifyincollection", "doc_url": "https://apidoc.tatum.io/tag/NFT (ERC-721 or compatible)#operation/nftverifyincollection", "server_url": "https://api.tatum.io/v3/nft/verify"}, "content": "path /v3/nft/verify\noperationId NftVerifyInCollection\nsummary Verify an NFT in an NFT collection on Solana\ndescription 2 credits per API call\nVerify an NFT in an NFT collection on Solana Verifying an NFT sets the Verified parameter to true for the NFT which means that the NFT is really a part of the collection To know more about Solana collections and verification refer to the Solana user documentation\nThe collection must be a sized collection that was introduced in Version 13 of the Metaplex Token Metadata program The NFT must have been minted in this collection\nThis API is supported only for Solana\nSigning a transaction\nWhen verifying an NFT you are charged a fee for the transaction and you must sign the transaction with the private key of the blockchain address from which the fee will be deducted\nProviding the private key in the API is not a secure way of signing transactions because the private key can be stolen or exposed Your private keys should never leave your security perimeter You should use the private keys only for testing a solution you are building on the testnet of a blockchain\nFor signing transactions on the mainnet we strongly recommend that you use the Tatum Key Management System KMS and provide the signature ID instead of the private key in the API Alternatively you can use the Tatum JavaScript client\nrequestBody\noneOf\nVerifySolanaNFT\ntype object\nproperties\nchain\ntype string\ndescription The blockchain to work with\nnftAddress\nmaxLength 44\nminLength 43\ndescription The blockchain address of the NFT to verify\ntype string\ncollectionAddress\nmaxLength 44\nminLength 43\ndescription The blockchain address of the NFT collection where the NFT should be verified in The collection must be a sized collection that was introduced in Version 13 of the Metaplex Token Metadata program\ntype string\nfrom\nmaxLength 44\nminLength 43\ndescription The blockchain address of the collection verifier on behalf of whom the transaction will be originated The transaction fee will be paid from this address\ntype string\nfromPrivateKey\ntype string\nmaxLength 128\nminLength 64\ndescription The private key of the collection verifiers address\nfeePayer\ndescription Address on the Solana blockchain from which the fee will be paid for transaction Defaults to from\nmaxLength 44\nminLength 43\ntype string\nfeePayerPrivateKey\ntype string\nmaxLength 87\nminLength 128\ndescription Private key of the fee payer address\nrequired\ncollectionAddress\nchain\nfromPrivateKey\nfrom\nnftAddress\nVerifySolanaNFTKMS\ntype object\nproperties\nchain\ntype string\ndescription The blockchain to work with\nnftAddress\nmaxLength 44\nminLength 43\ndescription The blockchain address of the NFT to verify\ntype string\ncollectionAddress\nmaxLength 44\nminLength 43\ndescription The blockchain address of the NFT collection where the NFT should be verified in The collection must be a sized collection that was introduced in Version 13 of the Metaplex Token Metadata program\ntype string\nfrom\nmaxLength 44\nminLength 43\ndescription The blockchain address of the collection verifier on behalf of whom the transaction will be originated The transaction fee will be paid from this address\ntype string\nsignatureId\ntype string\nformat uuid\ndescription Identifier of the private key associated in signing application Private key or signature Id must be present\nfeePayer\ndescription Blockchain address to pay the fee for the transaction from\nmaxLength 44\nminLength 43\ntype string\nfeePayerSignatureId\ntype string\nformat uuid\ndescription Identifier of the private key used for paying the gas costs in signing application Defaults to the signatureId\nrequired\ncollectionAddress\nchain\nsignatureId\nfrom\nnftAddress\nrequired True\nresponses\n200\noneOf\nTransactionHash\ntype object\nproperties\ntxId\ndescription The hash ID of the transaction\ntype string\nrequired\ntxId\nSignatureId\ntype object\nproperties\nsignatureId\nformat uuid\ndescription The internal Tatum ID of the prepared transaction for Key Management Sysytem KMS to signThis is different from the signatureId parameter that you provided in the request body The signatureId parameter in the request body specifies the signature ID associated with the private key in KMS\ntype string\nrequired\nsignatureId\ndescription OK"}