{
    "tag": "Celo",
    "operation_id": "CeloGetTransactionByAddress",
    "doc_url": "https://apidoc.tatum.io/tag/Celo#operation/CeloGetTransactionByAddress",
    "server_url": "https://api.tatum.io/v3/celo/account/transaction/{address}",
    "content": "path /v3/celo/account/transaction/address\noperationid celogettransactionbyaddress\nparameters\ndescription account address you want to get balance of\nin path\nname address\nrequired true\nschema\ntype string\ndescription max number of items per page is 50\nin query\nname pagesize\nschema\ntype number\nmaximum 50\nminimum 1\nrequired true\ndescription offset to obtain next page of the data\nin query\nname offset\nschema\ntype number\ndescription transactions from this block onwards will be included\nin query\nname from\nschema\ntype number\nminimum 0\ndescription transactions up to this block will be included\nin query\nname to\nschema\ntype number\nminimum 0\ndescription sorting of the data asc  oldest first desc  newest first\nin query\nname sort\nschema\ntype string\ndefault desc\nsummary get celo transactions by address\ndescription 1 credit per api call\nget celo transactions by address this includes incoming and outgoing transactions for the address\nresponses\n200\nschema\ntype array\ncelotx\ntype object\nproperties\nblockhash\ndescription hash of the block where this transaction was in\ntype string\nstatus\ntype boolean\ndescription true if the transaction was successful false if the evm reverted the transaction\nblocknumber\ntype number\ndescription block number where this transaction was in\nfrom\ntype string\ndescription address of the sender\ngas\ntype number\ndescription gas provided by the sender\ngasprice\ntype string\ndescription gas price provided by the sender in wei\ntransactionhash\ntype string\ndescription hash of the transaction\ninput\ntype string\ndescription the data sent along with the transaction\nnonce\ntype number\ndescription the number of transactions made by the sender prior to this one\nto\ntype string\ndescription address of the receiver null when its a contract creation transaction\ntransactionindex\ntype number\ndescription integer of the transactions index position in the block\nvalue\ntype string\ndescription value transferred in wei\ngasused\ntype number\ndescription the amount of gas used by this specific transaction alone\ncumulativegasused\ntype number\ndescription the total amount of gas used when this transaction was executed in the block\ncontractaddress\ntype string\ndescription the contract address created if the transaction was a contract creation otherwise null\nlogs\ntype array\ndescription log events that happened in this transaction\nitems\ntype object\nproperties\naddress\ntype string\ndescription from which this event originated from\ntopics\ntype string\ndescription an array with max 4 32 byte topics topic 13 contains indexed parameters of the log\ndata\ntype string\ndescription the data containing nonindexed log parameter\nlogindex\ntype number\ndescription integer of the event index position in the block\ntransactionindex\ntype number\ndescription integer of the transaction\u2019s index position the event was created in\ntransactionhash\ntype string\ndescription hash of the transaction this event was created in\ndescription ok",
    "tag_summary": "celo is fork of celo with more than 1000 tps and possibility to pay for\ntransactions in its own stable coin cusd celo blockchain enables access to most commonly used celo methods\nthese methods bring small level of abstraction\n       and are used for the type of applications that want to communicate with blockchain directly some of the methods are used alongside tatum private ledger\n       to connect blockchain and private ledger together like wallet generation or getting information about transactions\n      tatum supports 2 chains\n      mainnet  regular live chain\n      alfajorec  test chain used for testing purposes coins on test chain have no value and can be obtained from\n      faucet eg https//celoorg/developers/faucet\n      tatum supports bip44 hd wallets it is very convenient and secure since it can generate 231 addresses from 1 mnemonic phrase it is possible to generate this type of wallet with 1 simple api call",
    "tag_number": 13,
    "doc_number": 153,
    "title": "13_Celo_CeloGetTransactionByAddress_153.json"
}