{
    "tag": "Key Management System",
    "operation_id": "GetPendingTransactionToSign",
    "doc_url": "https://apidoc.tatum.io/tag/Key Management System#operation/GetPendingTransactionToSign",
    "server_url": "https://api.tatum.io/v3/kms/{id}",
    "content": "path /v3/kms/id\noperationid getpendingtransactiontosign\nparameters\ndescription id of transaction\nin path\nname id\nrequired true\nschema\ntype string\nmaxlength 24\nminlength 24\nsummary get transaction details\ndescription 1 credit per api callget detail of transaction to be signed / that was already signed and contains transactionid\nresponses\n200\npendingtransaction\ntype object\nproperties\nid\ndescription id of the pending transaction\ntype string\nchain\ntype string\ndescription blockchain of the transaction\nhashes\ntype array\ndescription list of the signature ids to be used to sign transaction those hashes should be in order of signing for the btc ltc or bch blockchains\nitems\ntype string\ndescription signature hash representing wallet or private key managed in the tatum kms instance\nserializedtransaction\ntype string\ndescription serialized data of the transaction to be signed it can be json hex or any other representation based on the blockchain\nwithdrawalid\ndescription id of the pending offchain withdrawal connected to this transaction\ntype string\nindex\ntype number\ndescription in case of mnemonic type of signature id this is the index to the specific account that should be used for signature\nminimum 0\ntxid\ndescription tx hash of successful transaction\ntype string\nwithdrawalresponses\nresponsedata\ntype object\nproperties\naddress\nrequired\naddress\ncurrency\nproperties\naddress\ndescription blockchain address\ntype string\ncurrency\ndescription currency of generated address btc ltc doge bch eth xrp xlm bnb trx erc20 trc20\ntype string\nderivationkey\ndescription derivation key index for given address\nformat int32\ntype integer\nmaximum 2147483647\nxpub\ndescription extended public key to derive address from in case of xrp this is account address since address is defined as destinationtag which is address field in case of xlm this is account address since address is defined as message which is address field\ntype string\ndestinationtag\ndescription in case of xrp destinationtag is the distinguisher of the account\ntype number\nmemo\ndescription in case of bnb message is the distinguisher of the account\ntype string\nmessage\ndescription in case of xlm message is the distinguisher of the account\ntype string\ntype object\namount\ndescription amount of unprocessed transaction outputs that can be used for withdrawal bitcoin litecoin bitcoin cash only\ntype number\nvin\ndescription last used unprocessed transaction output that can be used bitcoin litecoin bitcoin cash only if 1 it indicates prepared vout with amount to be transferred to pool address\ntype string\nvinindex\ndescription index of last used unprocessed transaction output in raw transaction that can be used bitcoin litecoin bitcoin cash only\ntype integer\nscriptpubkey\ntype string\ndescription script of last unprocessed utxo bitcoin sv only\ntype array\ndescription additional information used for btc ltc doge and bch offchain to blockchain transactions\nrequired\nid\nchain\nserializedtransaction\nhashes\ndescription ok",
    "tag_summary": "key management system kms is a comprehensive solution for building custodial applications kms runs locally on your server and provides security for generating wallets addresses and private keys and for signing transactions\nkms builds a list of pending transaction to sign and provides the options to complete a transaction after it has been signed and to obtain transaction details with the result of the blockchain operation via the transaction id\nin kms each managed wallet or private key is assigned a unique signature id signatureid that represents that wallet or private key this signature id is then used in an api request to identify the wallet\ndepending on the api you can use the signature id in an api call request in the following ways\n\n\nto represent the mnemonic type of the wallet for example in the api for sending btc from a virtual account to the blockchain see the transferbtckms request schema\nto represent the privatekey type of the wallet for example in the api for sending btc to a blockchain address see the btctransactionfromutxokms request schema\nto represent the mnemonic and index type of the wallet for example in the api for sending eth from a virtual account to the blockchain see the transferethkms request schemain this case the index of the specific private key generated from the mnemonic must be used in addition to the signature id\n\nyou can run kms on the following operating systems\n\nmacos natively or via docker\nunix natively or via docker\nms windows only via docker\n\nfor more information about kms see the kms github repository and the user documentation",
    "tag_number": 27,
    "doc_number": 258,
    "title": "27_Key Management System_GetPendingTransactionToSign_258.json"
}