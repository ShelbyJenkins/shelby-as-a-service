{
    "tag": "Multi Tokens (ERC-1155 or compatible)",
    "operation_id": "MintMultiTokenBatch",
    "doc_url": "https://apidoc.tatum.io/tag/Multi Tokens (ERC-1155 or compatible)#operation/MintMultiTokenBatch",
    "server_url": "https://api.tatum.io/v3/multitoken/mint/batch",
    "content": "path /v3/multitoken/mint/batch\noperationid mintmultitokenbatch\nparameters\ndescription type of testnet defaults to sepolia valid only for eth invocations\nin header\nname xtestnettype\nrequired false\nschema\ndefault ethereumsepolia\ntype string\nsummary mint multiple multi tokens\ndescription 2 credits per api call\ncreate a fixed amount of multiple multi tokens tokens and transfer them to destination account in one transaction create and transfer multi tokens tokens from smart contract defined in contractaddress\nthis api is supported for the following blockchains\n\nbnb smart chain\ncelo\nethereum\nharmony\nklaytn\nkucoin community chain\npolygon\n\nsigning a transaction\nwhen minting multiple multi tokens you are charged a fee for the transaction and you must sign the transaction with the private key of the blockchain address from which the fee will be deducted\nproviding the private key in the api is not a secure way of signing transactions because the private key can be stolen or exposed your private keys should never leave your security perimeter you should use the private keys only for testing a solution you are building on the testnet of a blockchain\nfor signing transactions on the mainnet we strongly recommend that you use the tatum key management system kms and provide the signature id instead of the private key in the api alternatively you can use the tatum javascript client\nrequestbody\noneof\nmintmultitokenbatch\ntype object\nproperties\nchain\ntype string\ndescription chain to work with\nto\ntype array\ndescription the blockchain address to send the multi tokens to\nitems\nmaxlength 42\nminlength 42\ntype string\ntokenid\ntype array\ndescription the ids of the multi tokens to be created\nitems\ntype array\nitems\ntype string\nmaxlength 32\namounts\ntype array\ndescription the amounts of the multi tokens to be created\nitems\ntype array\nitems\ntype string\nmaxlength 32\ndata\ndescription data in bytes\ntype string\ncontractaddress\nmaxlength 42\nminlength 42\ndescription the address of the multi token smart contract\ntype string\nfromprivatekey\ntype string\nmaxlength 66\nminlength 66\ndescription private key of sender address private key or signature id must be present\nnonce\ntype number\nminimum 0\ndescription nonce to be set to transaction if not present last known nonce will be used\nfee\ndescription custom defined fee if not present it will be calculated automatically\ntype object\nrequired\ngaslimit\ngasprice\nproperties\ngaslimit\ntype string\ndescription gas limit for transaction in gas price\npattern d\ngasprice\ntype string\ndescription gas price in gwei\npattern d\nrequired\nto\nchain\nurl\ncontractaddress\nfromprivatekey\ntokenid\namounts\nmintmultitokenbatchkms\ntype object\nproperties\nchain\ntype string\ndescription chain to work with\nto\ntype array\ndescription the blockchain address to send the multi tokens to\nitems\nmaxlength 42\nminlength 42\ntype string\ntokenid\ntype array\ndescription the ids of the multi tokens to be created\nitems\ntype array\nitems\ntype string\nmaxlength 32\namounts\ntype array\ndescription the amounts of the multi tokens to be created\nitems\ntype array\nitems\ntype string\nmaxlength 32\ndata\ndescription data in bytes\ntype string\ncontractaddress\nmaxlength 42\nminlength 42\ndescription the address of the multi token smart contract\ntype string\nindex\ntype number\nminimum 0\ndescription if signatureid is mnemonicbased this is the index to the specific address from that mnemonic\nsignatureid\ntype string\nformat uuid\ndescription identifier of the private key associated in signing application private key or signature id must be present\nnonce\ntype number\nminimum 0\ndescription nonce to be set to transaction if not present last known nonce will be used\nfee\ndescription custom defined fee if not present it will be calculated automatically\ntype object\nrequired\ngaslimit\ngasprice\nproperties\ngaslimit\ntype string\ndescription gas limit for transaction in gas price\npattern d\ngasprice\ntype string\ndescription gas price in gwei\npattern d\nrequired\nto\nchain\ncontractaddress\ntokenid\nurl\nsignatureid\namounts\nmintmultitokenbatchcelo\ntype object\nproperties\nchain\ntype string\ndescription chain to work with\ntokenid\ntype array\ndescription the ids of the multi tokens to be created\nitems\ntype array\nitems\ntype string\nmaxlength 32\namounts\ntype array\ndescription the amounts of the multi tokens to be created\nitems\ntype array\nitems\ntype string\nmaxlength 32\ndata\ndescription data in bytes\ntype string\nto\nmaxlength 42\nminlength 42\ndescription the blockchain address to send the multi tokens to\ntype array\nitems\ntype string\ncontractaddress\nmaxlength 42\nminlength 42\ndescription the address of the multi token smart contract\ntype string\nfromprivatekey\ntype string\nmaxlength 66\nminlength 66\ndescription private key of sender address private key or signature id must be present\nnonce\ntype number\nminimum 0\ndescription nonce to be set to celo transaction if not present last known nonce will be used\nfeecurrency\ntype string\ndescription currency to pay for transaction gas\nfee\ncustomfee\ndescription the custom defined fee if not present will be calculated automatically\ntype object\nrequired\ngaslimit\ngasprice\nproperties\ngasprice\ntype string\ndescription the price for one gas unit in gwei\npattern d\ngaslimit\ntype string\ndescription the maximum number of gas units that you are willing to spend on processing the transaction at the provided gas price\npattern d\nrequired\nchain\nto\ntokenid\namounts\nfeecurrency\ncontractaddress\nfromprivatekey\nmintmultitokenbatchkmscelo\ntype object\nproperties\nchain\ntype string\ndescription chain to work with\nto\ntype array\ndescription the blockchain address to send the multi tokens to\nitems\nmaxlength 42\nminlength 42\ntype string\ntokenid\ntype array\ndescription the ids of the multi tokens to be created\nitems\ntype array\nitems\ntype string\nmaxlength 32\namounts\ntype array\ndescription the amounts of the multi tokens to be created\nitems\ntype array\nitems\ntype string\nmaxlength 32\ndata\ndescription data in bytes\ntype string\ncontractaddress\nmaxlength 42\nminlength 42\ndescription the address of the multi token smart contract\ntype string\nindex\ntype number\nminimum 0\ndescription if signatureid is mnemonicbased this is the index to the specific address from that mnemonic\nsignatureid\ntype string\nformat uuid\ndescription identifier of the private key associated in signing application private key or signature id must be present\nnonce\ntype number\nminimum 0\ndescription nonce to be set to celo transaction if not present last known nonce will be used\nfeecurrency\ntype string\ndescription currency to pay for transaction gas\nfee\ncustomfee\ndescription the custom defined fee if not present will be calculated automatically\ntype object\nrequired\ngaslimit\ngasprice\nproperties\ngasprice\ntype string\ndescription the price for one gas unit in gwei\npattern d\ngaslimit\ntype string\ndescription the maximum number of gas units that you are willing to spend on processing the transaction at the provided gas price\npattern d\nrequired\nchain\nto\ncontractaddress\nfeecurrency\ntokenid\namounts\nsignatureid\nrequired true\nresponses\n200\noneof\ntransactionhash\ntype object\nproperties\ntxid\ndescription the hash id of the transaction\ntype string\nrequired\ntxid\nsignatureid\ntype object\nproperties\nsignatureid\nformat uuid\ndescription the internal tatum id of the prepared transaction for key management sysytem kms to signthis is different from the signatureid parameter that you provided in the request body the signatureid parameter in the request body specifies the signature id associated with the private key in kms\ntype string\nrequired\nsignatureid\ndescription ok",
    "tag_summary": "a multi token combines characteristics of fungible and nonfungible tokens a single multi token smart contract allows you to mint fungible nonfungible and semifungible tokens and process different types of the tokens in a single transaction multi tokens are described by the erc1155 standard on the ethereum blockchain or by the equivalent standard on the other blockchains\nmulti tokens can be used for nearly any digital asset or good to ensure authenticity and scarcity for example\n\ningame assets multi tokens can be used to create unique collectibles in the form of characters weapons skins or other equipment players can resell or trade assets directly as they choose and their authenticity is easily verifiable\nmusic and other digital media multi tokens can be used to create rare and unique collectible digital releases similarly multi tokens can be used to sell videos art or any other type of digital media collectors can own digital originals of their favorite songs movies and so on\ndigital sports merchandise trading cards memorabilia classic moments in sports history and oneofakind experiences can be sold as multi tokens\n\neach multi tokenrelated api supports its own set of the blockchains the list of the supported blockchains is provided in the api description further in this section",
    "tag_number": 33,
    "doc_number": 314,
    "title": "33_Multi Tokens (ERC-1155 or compatible)_MintMultiTokenBatch_314.json"
}