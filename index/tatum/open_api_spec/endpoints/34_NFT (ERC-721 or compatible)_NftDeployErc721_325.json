{
    "tag": "NFT (ERC-721 or compatible)",
    "operation_id": "NftDeployErc721",
    "doc_url": "https://apidoc.tatum.io/tag/NFT (ERC-721 or compatible)#operation/NftDeployErc721",
    "server_url": "https://api.tatum.io/v3/nft/deploy",
    "content": "path /v3/nft/deploy\noperationid nftdeployerc721\nparameters\ndescription type of ethereum testnet defaults to sepolia valid only for eth invocations for testnet api key for mainnet api key this value is ignored\nin header\nname xtestnettype\nrequired false\nschema\ndefault ethereumsepolia\ntype string\nsummary deploy an nft smart contract\ndescription 100 credits per api call on flow\n2 credits per api call on the other blockchains\ndeploy an nft smart contract on the blockchain in a deployed nft smart contract you can mint nfts one nft at a time or multiple nfts at once burn and transfer nfts\nsmart contracts are standardized and audited you can review the code of a deployed nft smart contract here if the contract is deployed on flow or here if the contract is deployed on any other supported blockchain\nthis api is supported for the following blockchains\n\nbnb smart chain\ncelo\nethereum\nflow\nharmony\nklaytn\nkucoin community chain\npolygon\ntron\n\ngeneral nft smart contracts\nby default an nft smart contract is deployed as a general nft smart contract compatible with opensea royalties this is a standard nft contract with accesscontrol and ownable enhanced with nft batch minting nfts minted on this smart contract are compatible with opensea and its royalty structure\nyou can enable public minting for smart contracts by default public minting is disabled which means that only the blockchain address whose private key was used to create the smart contract or the blockchain addresses added to the smart contract as nft minters will be able to mint nfts for the contract to enable public minting and allow anyone to mint nfts on top of the smart contract deploy the contract with the publicmint parameter set to true in the request body\nnft smart contracts and nft express\nif you want to use nft express to mint nfts on the deployed smart contract deploy the smart contract as a general nft smart contract\nafter you have deployed the nft smart contract add the tatum minter address as an nft minter to your smart contract\nfor the complete information about using nft express on your smart contract see use your own smart contract to mint nfts in mint an nft\nsigning a transaction\nwhen deploying an nft smart contract you are charged a fee for the transaction and you must sign the transaction with the private key of the blockchain address from which the fee will be deducted\nproviding the private key in the api is not a secure way of signing transactions because the private key can be stolen or exposed your private keys should never leave your security perimeter you should use the private keys only for testing a solution you are building on the testnet of a blockchain\nfor signing transactions on the mainnet we strongly recommend that you use the tatum key management system kms and provide the signature id instead of the private key in the api alternatively you can use the tatum javascript client\nrequestbody\noneof\ndeploynft\ntype object\nproperties\nchain\ntype string\ndescription the blockchain to work with\nname\ndescription name of the nft token\nmaxlength 100\nminlength 1\ntype string\nsymbol\ndescription symbol of the nft token\nmaxlength 30\nminlength 1\ntype string\nfromprivatekey\ndescription private key of account address from which gas for deployment of erc721 will be paid private key or signature id must be present\ntype string\nmaxlength 103\nminlength 66\npublicmint\ndescription true if the contract is publicmint type false by default\ntype boolean\nnonce\ntype number\nminimum 0\ndescription the nonce to be set to the transaction if not present the last known nonce will be used\nfee\ncustomfee\ndescription the custom defined fee if not present will be calculated automatically\ntype object\nrequired\ngaslimit\ngasprice\nproperties\ngasprice\ntype string\ndescription the price for one gas unit in gwei\npattern d\ngaslimit\ntype string\ndescription the maximum number of gas units that you are willing to spend on processing the transaction at the provided gas price\npattern d\nrequired\nname\nchain\nsymbol\nfromprivatekey\ndeploynftcelo\ntype object\nproperties\nchain\ntype string\ndescription the blockchain to work with\nname\ndescription name of the nft token\nmaxlength 100\nminlength 1\ntype string\npublicmint\ndescription true if the contract is publicmint type false by default\ntype boolean\nsymbol\ndescription symbol of the nft token\nmaxlength 30\nminlength 1\ntype string\nfromprivatekey\ndescription private key of account address from which gas for deployment of erc721 will be paid private key or signature id must be present\ntype string\nmaxlength 66\nminlength 66\nnonce\ntype number\nminimum 0\ndescription the nonce to be set to the transaction if not present the last known nonce will be used\nfeecurrency\ntype string\ndescription the currency in which the transaction fee will be paid\nfee\ncustomfee\ndescription the custom defined fee if not present will be calculated automatically\ntype object\nrequired\ngaslimit\ngasprice\nproperties\ngasprice\ntype string\ndescription the price for one gas unit in gwei\npattern d\ngaslimit\ntype string\ndescription the maximum number of gas units that you are willing to spend on processing the transaction at the provided gas price\npattern d\nrequired\nchain\nname\nsymbol\nfeecurrency\nfromprivatekey\ndeploynfttron\ntype object\nproperties\nchain\ntype string\ndescription the blockchain to work with\nname\ndescription name of the nft token\nmaxlength 100\nminlength 1\ntype string\nsymbol\ndescription symbol of the nft token\nmaxlength 30\nminlength 1\ntype string\nfromprivatekey\ndescription private key of account address from which gas for deployment of erc721 will be paid private key or signature id must be present\ntype string\nmaxlength 64\nminlength 64\nfeelimit\ntype number\ndescription the maximum amount to be paid as the transaction fee in trx deployment of a smart contract on tron costs around 580 trx\nrequired\nchain\nname\nsymbol\nfeelimit\nfromprivatekey\ndeploynftkms\ntype object\nproperties\nchain\ntype string\ndescription the blockchain to work with\nname\ndescription name of the nft token\nmaxlength 100\nminlength 1\ntype string\npublicmint\ndescription true if the contract is publicmint type false by default\ntype boolean\nsymbol\ndescription symbol of the nft token\nmaxlength 30\nminlength 1\ntype string\nindex\ntype number\nminimum 0\ndescription if signatureid is mnemonicbased this is the index to the specific address from that mnemonic\nsignatureid\ntype string\nformat uuid\ndescription identifier of the private key associated in signing application private key or signature id must be present\nnonce\ntype number\nminimum 0\ndescription the nonce to be set to the transaction if not present the last known nonce will be used\nfee\ncustomfee\ndescription the custom defined fee if not present will be calculated automatically\ntype object\nrequired\ngaslimit\ngasprice\nproperties\ngasprice\ntype string\ndescription the price for one gas unit in gwei\npattern d\ngaslimit\ntype string\ndescription the maximum number of gas units that you are willing to spend on processing the transaction at the provided gas price\npattern d\nrequired\nname\nchain\nsymbol\nsignatureid\ndeploynftcelokms\ntype object\nproperties\nchain\ntype string\ndescription the blockchain to work with\nname\ndescription name of the nft token\nmaxlength 100\nminlength 1\ntype string\nsymbol\ndescription symbol of the nft token\nmaxlength 30\nminlength 1\ntype string\nindex\ntype number\nminimum 0\ndescription if signatureid is mnemonicbased this is the index to the specific address from that mnemonic\nsignatureid\ntype string\nformat uuid\ndescription identifier of the private key associated in signing application private key or signature id must be present\nnonce\ntype number\ndescription the nonce to be set to the transaction if not present the last known nonce will be used\nminimum 0\npublicmint\ndescription true if the contract is publicmint type false by default\ntype boolean\nfeecurrency\ntype string\ndescription the currency in which the transaction fee will be paid\nfee\ncustomfee\ndescription the custom defined fee if not present will be calculated automatically\ntype object\nrequired\ngaslimit\ngasprice\nproperties\ngasprice\ntype string\ndescription the price for one gas unit in gwei\npattern d\ngaslimit\ntype string\ndescription the maximum number of gas units that you are willing to spend on processing the transaction at the provided gas price\npattern d\nrequired\nchain\nname\nsymbol\nfeecurrency\nsignatureid\ndeploynfttronkms\ntype object\nproperties\nchain\ntype string\ndescription the blockchain to work with\nfrom\nmaxlength 34\nminlength 34\ndescription blockchain address to perform transaction from\ntype string\nname\ndescription name of the nft token\nmaxlength 100\nminlength 1\ntype string\nsymbol\ndescription symbol of the nft token\nmaxlength 30\nminlength 1\ntype string\nindex\ntype number\nminimum 0\ndescription if signatureid is mnemonicbased this is the index to the specific address from that mnemonic\nsignatureid\ntype string\nformat uuid\ndescription identifier of the private key associated in signing application private key or signature id must be present\nfeelimit\ntype number\ndescription the maximum amount to be paid as the transaction fee in trx deployment of a smart contract on tron costs around 580 trx\nrequired\nchain\nname\nfrom\nsymbol\nfeelimit\nsignatureid\ndeploynftflowpk\ntype object\nproperties\nchain\ntype string\ndescription the blockchain to work with\naccount\ntype string\nmaxlength 18\nminlength 18\ndescription blockchain address of the sender account\nprivatekey\ntype string\nmaxlength 64\nminlength 64\ndescription private key of sender address private key mnemonic and index or signature id must be present\nrequired\nchain\naccount\nprivatekey\ndeploynftflowmnemonic\ntype object\nproperties\nchain\ntype string\ndescription the blockchain to work with\naccount\ntype string\nmaxlength 18\nminlength 18\ndescription blockchain address of the sender account\nmnemonic\ntype string\nmaxlength 500\nminlength 1\ndescription mnemonic to generate private key of sender address\nindex\ndescription derivation index of sender address\ntype integer\nmaximum 2147483647\nrequired\nchain\naccount\nmnemonic\nindex\nrequired true\nresponses\n200\noneof\ntransactionhash\ntype object\nproperties\ntxid\ndescription the hash id of the transaction\ntype string\nrequired\ntxid\nsignatureid\ntype object\nproperties\nsignatureid\nformat uuid\ndescription the internal tatum id of the prepared transaction for key management sysytem kms to signthis is different from the signatureid parameter that you provided in the request body the signatureid parameter in the request body specifies the signature id associated with the private key in kms\ntype string\nrequired\nsignatureid\ndescription ok",
    "tag_summary": "nft stands for nonfungible token which means that each token is unique and irreplaceable nfts are described by the erc721 standard on the ethereum blockchain or by the equivalent standard on the other blockchains\nnfts can be used for nearly any digital asset or good to ensure authenticity and scarcity for example\n\ningame assets nfts can be used to create unique collectibles in the form of characters weapons skins or other equipment players can resell or trade assets directly as they choose and their authenticity is easily verifiable\nmusic and other digital media nfts can be used to create rare and unique collectible digital releases similarly nfts can be used to sell videos art or any other type of digital media collectors can own digital originals of their favorite songs movies and so on\ndigital sports merchandise trading cards memorabilia classic moments in sports history and oneofakind experiences can be sold as nfts\n\neach nftrelated api its own set of the blockchains the list of the supported blockchains is provided in the api description further in this section",
    "tag_number": 34,
    "doc_number": 325,
    "title": "34_NFT (ERC-721 or compatible)_NftDeployErc721_325.json"
}