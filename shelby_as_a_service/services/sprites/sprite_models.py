from dataclasses import dataclass, field
from typing import List

@dataclass
class DiscordSpriteModel:

    discord_enabled_servers: List[str] = field(default_factory=list) 
    discord_specific_channels_enabled: bool = False
    discord_specific_channel_ids: List[str] = field(default_factory=list) 
    discord_all_channels_enabled: bool = False
    discord_all_channels_excluded_channels: List[str] = field(default_factory=list) 
    discord_manual_requests_enabled: bool = True
    # discord_auto_response_enabled: bool = False
    # discord_auto_response_cooldown: int = 10
    # discord_auto_respond_in_threads: bool = False
    # discord_user_daily_token_limit: int = 30000
    discord_welcome_message: str = 'ima tell you about the {}.'
    discord_short_message: str = '<@{}>, brevity is the soul of wit, but not of good queries. Please provide more details in your request.'
    discord_message_start: str = 'Running request... relax, chill, and vibe a minute.'
    discord_message_end: str = 'Generated by: gpt-4. Memory not enabled. Has no knowledge of past or current queries. For code see https://github.com/shelby-as-a-service/shelby-as-a-service.'

    service_name_: str = 'discord_sprite'
    required_variables_: List[str] = field(default_factory=lambda: ['discord_enabled_servers'])
    required_secrets_: List[str] = field(default_factory=lambda: ['discord_bot_token'])

@dataclass
class SlackSpriteModel:

    slack_enabled_teams: List[str] = field(default_factory=list) 
    slack_welcome_message: str = 'ima tell you about the {}.'
    slack_short_message: str = '<@{}>, brevity is the soul of wit, but not of good queries. Please provide more details in your request.'
    slack_message_start: str = 'Relax and vibe while your query is embedded, documents are fetched, and the LLM is prompted.'
    slack_message_end: str = 'Generated by: gpt-4. Memory not enabled. Has no knowledge of past or current queries. For code see https://github.com/shelby-as-a-service/shelby-as-a-service.'

    service_name_: str = 'slack_sprite'
    required_variables_: List[str] = field(default_factory=lambda: ['slack_enabled_teams'])
    required_secrets_: List[str] = field(default_factory=lambda: ['slack_app_token', 'slack_bot_token'])

@dataclass
class LocalSpriteModel:

    # default_deployment_enabled: bool = True
    # default_local_deployment_name: Optional[str] = None
    local_message_start: str = 'Running request... relax, chill, and vibe a minute.'
    local_message_end: str = 'Generated by: gpt-4. Memory not enabled. Has no knowledge of past or current queries. For code see https://github.com/shelby-as-a-service/shelby-as-a-service.'
    enabled_data_domains: List[str] = None
    enabled_data_sources: List[str] = None
    
    service_name_: str = 'local_sprite'
    required_variables_: List[str] = field(default_factory=list) 
    required_secrets_: List[str] = field(default_factory=list) 
    
    
# @dataclass
# class ContainerDeploymentModel:
    
#     required_variables_ = ['docker_registry', 'docker_username', 'docker_repo']
#     required_secrets_ = [
#         'docker_token',
#         'stackpath_stack_slug',
#         'stackpath_client_id',
#         'stackpath_api_client_secret',
#     ]

#     docker_registry: Optional[str] = None
#     docker_username: Optional[str] = None
#     docker_repo: Optional[str] = None


